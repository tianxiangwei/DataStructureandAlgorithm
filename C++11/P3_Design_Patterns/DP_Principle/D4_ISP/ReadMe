接口隔离原则(Interface Segregation Principle,ISP)
4.1 定义

（1）使用多个专门的接口，而不使用单一的总接口，即客户端不应该依赖那些它不需要的接口。类间的依赖关系应该建立在最小接口上

（2）接口尽量细化，同时接口中的方法尽量少。每个接口中只包含一个客户端（如子模块或业务逻辑类）所需的方法即可，这种机制也称为“定制服务”，即为不同的客户端提供宽窄不同的接口。

（3）为接口添加了不必要的方法，这叫接口污染。这对于实现类来讲，就是一种污染，他们会被迫去实现这些不必要的功能方法。并且当接口发生改变时，他们也不得不跟着改变。

4.2 接口隔离原则和单一职责原则的区别

（1）单一职责注意的是职责，是从业务逻辑上划分的。而接口隔离要求接口要尽量少。如有一个向外提供查询服务的，但提供的接口很多，有普通权限和高级权限的查询方法。这按单一职责原则是允许的，只提供单一职责，即查询。但按照接口隔离原则是不允许的。应按权限提供专门的接口给不同权限的客户端。

（2）接口隔离原则讲的就是同一个角色提供宽、窄不同的接口，以对付不同的客户端。

4.3 使用接口原则的注意事项

（1）接口尽量小，但要有限度。对接口进行细行可以提高设计灵活性，但如果过小，则会造成接口数量过多，使设计模式复杂化

（2）为依赖接口的类定制服务，只暴露给调用它的类所需要的方法，不需要的则隐藏起来。

（3）提高内聚，减少对外交互。使接口用最小的方法去完成最多的事情。具体要求就是，在接口中尽量少提供public方法，接口是对外的承诺，承诺地越少对系统开发越有利，变更的风险也就越少，同时也有利于降低成本。


