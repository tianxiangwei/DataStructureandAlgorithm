里氏替换原则(Liskov Substitution Principle,LSP)
(1）所有使用基类的地方必须能透明地使用子类替换，而程序的行为没有任何变化（不会产生运行结果错误或异常）。
只有这样，父类才能被真正复用，而且子类也能够在父类的基础上增加新的行为。也只有这样才能正确的实现多态

(2）当一个类继承了另一个类时，子类就拥有了父类中可以继承下来的属性和操作。
但如果子类覆盖了父类的某些方法，那么原来使用父类的地方就可能会出现错误，因为表面上看，它调用了父类的方法，
但实际运行时却调用了被子类覆盖的方法，而这两个方法的实现可能不一样，这就不符合LSP原则。

(3）里氏代换原则是实现开闭原则的重要方式之一.
由于使用基类对象的地方都可以使用子类对象，因此在程序中尽量使用基类类型来对对象进行定义，
而在运行时再确定其子类类型，用子类对象来替换父类对象。
